[{"/home/kristina/MyProjects/chat-application/src/index.js":"1","/home/kristina/MyProjects/chat-application/src/App.js":"2","/home/kristina/MyProjects/chat-application/src/consts.js":"3","/home/kristina/MyProjects/chat-application/src/components/chat/ChatContainer.jsx":"4","/home/kristina/MyProjects/chat-application/src/components/chat/chat-list/ChatList.jsx":"5","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/ChatBox.jsx":"6","/home/kristina/MyProjects/chat-application/src/utils/uuid.js":"7","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplay.jsx":"8","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplayStyle.jsx":"9","/home/kristina/MyProjects/chat-application/src/components/login/Login.jsx":"10","/home/kristina/MyProjects/chat-application/src/hooks/ApiHook.js":"11","/home/kristina/MyProjects/chat-application/src/hooks/EnterSubmitHook.js":"12","/home/kristina/MyProjects/chat-application/src/initial-data/UsersSchema.js":"13","/home/kristina/MyProjects/chat-application/src/components/profile/Profile.jsx":"14"},{"size":501,"mtime":1608398478893,"results":"15","hashOfConfig":"16"},{"size":1962,"mtime":1608492394449,"results":"17","hashOfConfig":"16"},{"size":408,"mtime":1608482311786,"results":"18","hashOfConfig":"16"},{"size":1082,"mtime":1608476021772,"results":"19","hashOfConfig":"16"},{"size":1028,"mtime":1608472743060,"results":"20","hashOfConfig":"16"},{"size":2420,"mtime":1608476654467,"results":"21","hashOfConfig":"16"},{"size":55,"mtime":1608229825977,"results":"22","hashOfConfig":"16"},{"size":998,"mtime":1608407492462,"results":"23","hashOfConfig":"16"},{"size":298,"mtime":1608472972447,"results":"24","hashOfConfig":"16"},{"size":2739,"mtime":1608490622099,"results":"25","hashOfConfig":"16"},{"size":1434,"mtime":1608476021772,"results":"26","hashOfConfig":"16"},{"size":397,"mtime":1608476308627,"results":"27","hashOfConfig":"16"},{"size":565,"mtime":1608489587119,"results":"28","hashOfConfig":"16"},{"size":2184,"mtime":1608491801117,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"af39hx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/kristina/MyProjects/chat-application/src/index.js",[],["64","65"],"/home/kristina/MyProjects/chat-application/src/App.js",[],"/home/kristina/MyProjects/chat-application/src/consts.js",["66"],"export const userId = '1';\n\nexport const KEY = '$2b$10$4hgmrek9qSMeyzBmnxOhKOaDqWFY8XdPweNc1zwlFSLPp5G/B0bie';\n\nexport const URL = 'https://api.jsonbin.io/b' + '/';\n\nexport const CHAT_IDS = '5fdcbfffe04f5f2fd3196a80';\n\nexport const ACTIVE_CHAT_ID = '5fde0be74b8f7e61dfd0aed5';\n\nexport const POLLING_INTERVAL_SEC = 2000;\n\nexport const ACTIVE_CHAT_STORAGE_KEY = 'activeChatId';\n\nexport const SALT_ROUNDS = 10;\n","/home/kristina/MyProjects/chat-application/src/components/chat/ChatContainer.jsx",["67","68","69"],"import React, {useEffect, useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {ACTIVE_CHAT_ID, ACTIVE_CHAT_STORAGE_KEY, CHAT_IDS, URL} from '../../consts';\nimport useAPI from '../../hooks/ApiHook';\nimport ChatBox from './chat-box/ChatBox';\nimport ChatList from './chat-list/ChatList';\n\nconst ChatContainer = ({user}) => {\n  const [loading, error, data, reload] = useAPI(URL + CHAT_IDS);\n  const [activeChatId, setActiveChatId] = useState(null);\n\n  useEffect(() => {\n    const initialActiveChatId = localStorage.getItem(ACTIVE_CHAT_STORAGE_KEY);\n    if (!initialActiveChatId) {\n      localStorage.setItem(ACTIVE_CHAT_STORAGE_KEY, ACTIVE_CHAT_ID);\n    }\n    setActiveChatId(initialActiveChatId ?? ACTIVE_CHAT_ID);\n  }, []);\n\n  if (!data || loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <div style={{display: 'flex', height: '100%'}}>\n      <ChatList chatList={data} setActiveChatId={setActiveChatId} activeChatId={activeChatId} />\n      <ChatBox userId={user.id} activeChatId={activeChatId} />\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","/home/kristina/MyProjects/chat-application/src/components/chat/chat-list/ChatList.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/ChatBox.jsx",["70","71","72"],"import React, {useEffect, useState} from 'react';\nimport {Button, Form, FormControl} from 'react-bootstrap';\nimport {KEY, POLLING_INTERVAL_SEC, URL} from '../../../consts';\nimport uuid from '../../../utils/uuid';\nimport useAPI from '../../../hooks/ApiHook';\nimport ChatBoxDisplay from './chat-box-display/ChatBoxDisplay';\nimport useEnterSubmit from '../../../hooks/EnterSubmitHook';\n\nconst ChatBox = ({userId, activeChatId}) => {\n  const [loading, error, data, reload, changeUrl] = useAPI(URL + activeChatId);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    changeUrl(URL + activeChatId);\n  }, [activeChatId]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      reload();\n    }, POLLING_INTERVAL_SEC * 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const updateChat = () => {\n    const message = {\n      id: uuid(),\n      userId,\n      text,\n      createdAt: String(new Date()),\n    };\n    const updatedMessages = data.messages.concat(message);\n    const updatedChat = {...data, messages: updatedMessages};\n\n    fetch(URL + activeChatId, {\n      method: 'PUT',\n      headers: {\n        versioning: 'false',\n        'secret-key': KEY,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedChat),\n    });\n\n    reload();\n  };\n\n  useEnterSubmit(updateChat);\n\n  const styleBox = {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(215, 227, 239, 1)',\n    width: '100%',\n  };\n  if (!data || loading) {\n    return <div style={styleBox}>Loading...</div>;\n  }\n  return (\n    <div style={styleBox}>\n      <ChatBoxDisplay activeChat={data} style={{justifyContent: 'center'}} />\n      <Form\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          margin: '10px',\n          marginTop: '0',\n          paddingTop: '8px',\n          borderTop: '2px solid rgba(54, 93, 135, 0.5)',\n        }}\n        onSubmit={event => {\n          event.preventDefault();\n          updateChat();\n          setText('');\n        }}\n      >\n        <FormControl\n          as=\"input\"\n          type=\"text\"\n          onChange={({target: {value}}) => {\n            setText(value);\n          }}\n          value={text}\n        />\n        <Button variant=\"primary\" type=\"submit\" style={{padding: '0', width: '150px'}}>\n          Send\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","/home/kristina/MyProjects/chat-application/src/utils/uuid.js",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplay.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplayStyle.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/login/Login.jsx",["73"],"import React, {useEffect, useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport bcrypt from 'bcryptjs';\n// import {users} from '../../initial-data/UsersSchema';\nimport {useHistory} from 'react-router-dom';\nimport useEnterSubmit from '../../hooks/EnterSubmitHook';\n\nconst Login = ({user, setUser}) => {\n  const [emailText, setEmailText] = useState('');\n  const [passwordText, setPasswordText] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const history = useHistory();\n\n  const login = () => {\n    setPasswordError('');\n    setEmailError('');\n    const users = JSON.parse(localStorage.getItem('users'));\n    const foundUser = users.find(({email}) => email === emailText);\n    if (!foundUser) {\n      setEmailError('Invalid user');\n    } else {\n      const isAuthenticated = bcrypt.compareSync(passwordText, foundUser.password);\n      if (isAuthenticated) {\n        setUser(foundUser);\n        history.push('/chat');\n      } else {\n        setPasswordError('Incorrect password');\n      }\n    }\n  };\n\n  useEnterSubmit(login);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Form\n        style={{\n          border: '2px solid rgba(54, 93, 135, 1)',\n          borderRadius: '5px',\n          padding: '20px',\n          maxWidth: '400px',\n          minWidth: '280px',\n          width: '100%',\n        }}\n        onSubmit={event => {\n          event.preventDefault();\n          login();\n        }}\n      >\n        <Form.Group controlId=\"formBasicEmail\" style={{width: '100%'}}>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            style={{width: '100%'}}\n            isInvalid={emailError}\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={({target: {value}}) => {\n              setEmailText(value);\n            }}\n          />\n          <Form.Text className=\"text-muted\">{emailError}</Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" style={{width: '100%'}}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            style={{width: '100%'}}\n            isInvalid={passwordError}\n            type=\"password\"\n            placeholder=\"Enter password\"\n            onChange={({target: {value}}) => {\n              setPasswordText(value);\n            }}\n          />\n          <Form.Text className=\"text-muted\">{passwordError}</Form.Text>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" style={{width: '100%'}}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/kristina/MyProjects/chat-application/src/hooks/ApiHook.js",[],"/home/kristina/MyProjects/chat-application/src/hooks/EnterSubmitHook.js",["74"],"import {useEffect} from 'react';\n\nconst useEnterSubmit = callback => {\n  useEffect(() => {\n    const listener = ({code}) => {\n      if (code === 'Enter' || code === 'NumpadEnter') {\n        callback();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => {\n      document.removeEventListener('keydown', listener);\n    };\n  }, []);\n};\n\nexport default useEnterSubmit;\n","/home/kristina/MyProjects/chat-application/src/initial-data/UsersSchema.js",[],"/home/kristina/MyProjects/chat-application/src/components/profile/Profile.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":47,"nodeType":"81","messageId":"82","endLine":5,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":2,"column":9,"nodeType":"85","messageId":"86","endLine":2,"endColumn":19},{"ruleId":"83","severity":1,"message":"87","line":9,"column":19,"nodeType":"85","messageId":"86","endLine":9,"endColumn":24},{"ruleId":"83","severity":1,"message":"88","line":9,"column":32,"nodeType":"85","messageId":"86","endLine":9,"endColumn":38},{"ruleId":"83","severity":1,"message":"87","line":10,"column":19,"nodeType":"85","messageId":"86","endLine":10,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":15,"column":6,"nodeType":"91","endLine":15,"endColumn":20,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":24,"column":6,"nodeType":"91","endLine":24,"endColumn":8,"suggestions":"94"},{"ruleId":"83","severity":1,"message":"95","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"96","line":14,"column":6,"nodeType":"91","endLine":14,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'reload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeUrl'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["101"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [activeChatId, changeUrl]",{"range":"109","text":"110"},"Update the dependencies array to be: [reload]",{"range":"111","text":"112"},"Update the dependencies array to be: [callback]",{"range":"113","text":"114"},[611,625],"[activeChatId, changeUrl]",[805,807],"[reload]",[357,359],"[callback]"]