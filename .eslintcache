[{"/home/kristina/MyProjects/chat-application/src/index.js":"1","/home/kristina/MyProjects/chat-application/src/App.js":"2","/home/kristina/MyProjects/chat-application/src/consts.js":"3","/home/kristina/MyProjects/chat-application/src/components/chat/ChatContainer.jsx":"4","/home/kristina/MyProjects/chat-application/src/components/chat/chat-list/ChatList.jsx":"5","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/ChatBox.jsx":"6","/home/kristina/MyProjects/chat-application/src/utils/uuid.js":"7","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplay.jsx":"8","/home/kristina/MyProjects/chat-application/src/components/login/Login.jsx":"9","/home/kristina/MyProjects/chat-application/src/hooks/ApiHook.js":"10","/home/kristina/MyProjects/chat-application/src/hooks/EnterSubmitHook.js":"11","/home/kristina/MyProjects/chat-application/src/initial-data/UsersSchema.js":"12","/home/kristina/MyProjects/chat-application/src/components/profile/Profile.jsx":"13","/home/kristina/MyProjects/chat-application/src/components/miscellaneous/Loader.jsx":"14","/home/kristina/MyProjects/chat-application/src/components/nav-bar/NavBar.jsx":"15"},{"size":508,"mtime":1608555028531,"results":"16","hashOfConfig":"17"},{"size":1602,"mtime":1608555580483,"results":"18","hashOfConfig":"17"},{"size":500,"mtime":1608544564527,"results":"19","hashOfConfig":"17"},{"size":1120,"mtime":1608557095160,"results":"20","hashOfConfig":"17"},{"size":837,"mtime":1608559687505,"results":"21","hashOfConfig":"17"},{"size":2309,"mtime":1608559955892,"results":"22","hashOfConfig":"17"},{"size":55,"mtime":1608229825977,"results":"23","hashOfConfig":"17"},{"size":792,"mtime":1608558801212,"results":"24","hashOfConfig":"17"},{"size":2433,"mtime":1608558287951,"results":"25","hashOfConfig":"17"},{"size":1434,"mtime":1608476021772,"results":"26","hashOfConfig":"17"},{"size":397,"mtime":1608476308627,"results":"27","hashOfConfig":"17"},{"size":630,"mtime":1608544713688,"results":"28","hashOfConfig":"17"},{"size":2591,"mtime":1608558139154,"results":"29","hashOfConfig":"17"},{"size":450,"mtime":1608560739396,"results":"30","hashOfConfig":"17"},{"size":880,"mtime":1608555465433,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"af39hx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/kristina/MyProjects/chat-application/src/index.js",[],["67","68"],"/home/kristina/MyProjects/chat-application/src/App.js",[],"/home/kristina/MyProjects/chat-application/src/consts.js",["69"],"export const KEY = '$2b$10$4hgmrek9qSMeyzBmnxOhKOaDqWFY8XdPweNc1zwlFSLPp5G/B0bie';\n\nexport const URL = 'https://api.jsonbin.io/b' + '/';\n\nexport const CHAT_IDS = '5fdcbfffe04f5f2fd3196a80';\n\nexport const ACTIVE_CHAT_ID = '5fde0be74b8f7e61dfd0aed5';\n\nexport const POLLING_INTERVAL_SEC = 2000;\n\nexport const ACTIVE_CHAT_STORAGE_KEY = 'activeChatId';\n\nexport const SALT_ROUNDS = 10;\n\nexport const UNAVAILABLE_USER = {\n  id: '0',\n  email: 'unavailabe',\n  password: 'unavailabe',\n  name: 'unavailabe',\n};\n","/home/kristina/MyProjects/chat-application/src/components/chat/ChatContainer.jsx",["70","71"],"import React, {useEffect, useState} from 'react';\nimport {ACTIVE_CHAT_ID, ACTIVE_CHAT_STORAGE_KEY, CHAT_IDS, URL} from '../../consts';\nimport useAPI from '../../hooks/ApiHook';\nimport Loader from '../miscellaneous/Loader';\nimport ChatBox from './chat-box/ChatBox';\nimport ChatList from './chat-list/ChatList';\nimport './../../styles/chat/chat-container.css';\n\nconst ChatContainer = ({user}) => {\n  const [loading, error, data, reload] = useAPI(URL + CHAT_IDS);\n  const [activeChatId, setActiveChatId] = useState(null);\n\n  useEffect(() => {\n    const initialActiveChatId = localStorage.getItem(ACTIVE_CHAT_STORAGE_KEY);\n    if (!initialActiveChatId) {\n      localStorage.setItem(ACTIVE_CHAT_STORAGE_KEY, ACTIVE_CHAT_ID);\n    }\n    setActiveChatId(initialActiveChatId ?? ACTIVE_CHAT_ID);\n  }, []);\n\n  if (!data || loading) {\n    return <Loader size=\"lg\" />;\n  }\n\n  return (\n    <div className=\"chat-container\" >\n      <ChatList chatList={data} setActiveChatId={setActiveChatId} activeChatId={activeChatId} />\n      <ChatBox userId={user.id} activeChatId={activeChatId} />\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","/home/kristina/MyProjects/chat-application/src/components/chat/chat-list/ChatList.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/ChatBox.jsx",["72","73","74"],"import React, {useEffect, useState} from 'react';\nimport {Button, Form, FormControl} from 'react-bootstrap';\nimport {KEY, POLLING_INTERVAL_SEC, URL} from '../../../consts';\nimport uuid from '../../../utils/uuid';\nimport useAPI from '../../../hooks/ApiHook';\nimport ChatBoxDisplay from './chat-box-display/ChatBoxDisplay';\nimport useEnterSubmit from '../../../hooks/EnterSubmitHook';\nimport Loader from '../../miscellaneous/Loader';\nimport './../../../styles/chat/chat-box.css';\n\nconst ChatBox = ({userId, activeChatId}) => {\n  const [loading, error, data, reload, changeUrl] = useAPI(URL + activeChatId);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    changeUrl(URL + activeChatId);\n  }, [activeChatId]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      reload();\n    }, POLLING_INTERVAL_SEC * 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const updateChat = () => {\n    if (text === '') {\n      return;\n    }\n    const message = {\n      id: uuid(),\n      userId,\n      text,\n      createdAt: String(new Date()),\n    };\n    const updatedMessages = data.messages.concat(message);\n    const updatedChat = {...data, messages: updatedMessages};\n\n    fetch(URL + activeChatId, {\n      method: 'PUT',\n      headers: {\n        versioning: 'false',\n        'secret-key': KEY,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedChat),\n    });\n\n    reload();\n  };\n\n  useEnterSubmit(updateChat);\n\n  return (\n    <div className=\"chat-box\">\n      {!data || loading ? (\n        <Loader size=\"md\" />\n      ) : (\n        <>\n          <ChatBoxDisplay activeUserId={userId} activeChat={data} />\n          <Form\n            className=\"user-input\"\n            onSubmit={event => {\n              event.preventDefault();\n              updateChat();\n              setText('');\n            }}\n          >\n            <FormControl\n              as=\"input\"\n              type=\"text\"\n              onChange={({target: {value}}) => {\n                setText(value);\n              }}\n              value={text}\n            />\n            <Button variant=\"primary\" className=\"send-button\" type=\"submit\">\n              <p>Send</p>\n            </Button>\n          </Form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBox;\n","/home/kristina/MyProjects/chat-application/src/utils/uuid.js",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplay.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/login/Login.jsx",[],"/home/kristina/MyProjects/chat-application/src/hooks/ApiHook.js",[],"/home/kristina/MyProjects/chat-application/src/hooks/EnterSubmitHook.js",["75"],"import {useEffect} from 'react';\n\nconst useEnterSubmit = callback => {\n  useEffect(() => {\n    const listener = ({code}) => {\n      if (code === 'Enter' || code === 'NumpadEnter') {\n        callback();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => {\n      document.removeEventListener('keydown', listener);\n    };\n  }, []);\n};\n\nexport default useEnterSubmit;\n","/home/kristina/MyProjects/chat-application/src/initial-data/UsersSchema.js",[],"/home/kristina/MyProjects/chat-application/src/components/profile/Profile.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/miscellaneous/Loader.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/nav-bar/NavBar.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":3,"column":47,"nodeType":"82","messageId":"83","endLine":3,"endColumn":48},{"ruleId":"84","severity":1,"message":"85","line":10,"column":19,"nodeType":"86","messageId":"87","endLine":10,"endColumn":24},{"ruleId":"84","severity":1,"message":"88","line":10,"column":32,"nodeType":"86","messageId":"87","endLine":10,"endColumn":38},{"ruleId":"84","severity":1,"message":"85","line":12,"column":19,"nodeType":"86","messageId":"87","endLine":12,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":17,"column":6,"nodeType":"91","endLine":17,"endColumn":20,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":26,"column":6,"nodeType":"91","endLine":26,"endColumn":8,"suggestions":"94"},{"ruleId":"89","severity":1,"message":"95","line":14,"column":6,"nodeType":"91","endLine":14,"endColumn":8,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'reload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeUrl'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["100"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [activeChatId, changeUrl]",{"range":"108","text":"109"},"Update the dependencies array to be: [reload]",{"range":"110","text":"111"},"Update the dependencies array to be: [callback]",{"range":"112","text":"113"},[706,720],"[activeChatId, changeUrl]",[900,902],"[reload]",[357,359],"[callback]"]