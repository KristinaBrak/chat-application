[{"/home/kristina/MyProjects/chat-application/src/index.js":"1","/home/kristina/MyProjects/chat-application/src/App.js":"2","/home/kristina/MyProjects/chat-application/src/consts.js":"3","/home/kristina/MyProjects/chat-application/src/components/chat/ChatContainer.jsx":"4","/home/kristina/MyProjects/chat-application/src/components/chat/chat-list/ChatList.jsx":"5","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/ChatBox.jsx":"6","/home/kristina/MyProjects/chat-application/src/utils/uuid.js":"7","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplay.jsx":"8","/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplayStyle.jsx":"9","/home/kristina/MyProjects/chat-application/src/components/login/Login.jsx":"10","/home/kristina/MyProjects/chat-application/src/components/login/UsersSchema.js":"11","/home/kristina/MyProjects/chat-application/src/hooks/ApiHook.js":"12","/home/kristina/MyProjects/chat-application/src/hooks/EnterSubmitHook.js":"13"},{"size":501,"mtime":1608398478893,"results":"14","hashOfConfig":"15"},{"size":1168,"mtime":1608476022112,"results":"16","hashOfConfig":"15"},{"size":408,"mtime":1608482311786,"results":"17","hashOfConfig":"15"},{"size":1082,"mtime":1608476021772,"results":"18","hashOfConfig":"15"},{"size":1028,"mtime":1608472743060,"results":"19","hashOfConfig":"15"},{"size":2420,"mtime":1608476654467,"results":"20","hashOfConfig":"15"},{"size":55,"mtime":1608229825977,"results":"21","hashOfConfig":"15"},{"size":998,"mtime":1608407492462,"results":"22","hashOfConfig":"15"},{"size":298,"mtime":1608472972447,"results":"23","hashOfConfig":"15"},{"size":2795,"mtime":1608476380461,"results":"24","hashOfConfig":"15"},{"size":493,"mtime":1608466177908,"results":"25","hashOfConfig":"15"},{"size":1434,"mtime":1608476021772,"results":"26","hashOfConfig":"15"},{"size":397,"mtime":1608476308627,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"af39hx",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/home/kristina/MyProjects/chat-application/src/index.js",[],["61","62"],"/home/kristina/MyProjects/chat-application/src/App.js",["63"],"import ChatContainer from './components/chat/ChatContainer';\nimport Login from './components/login/Login';\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\nimport React, {useState} from 'react';\nimport ChatBoxDisplay from './components/chat/chat-box/chat-box-display/ChatBoxDisplay';\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <div style={{height: '100vh'}}>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login user={user} setUser={setUser} />\n          </Route>\n          {user ? (\n            <>\n              <Route exact path=\"/chat\">\n                <ChatContainer user={user} />\n              </Route>\n              {/* <Route exact path=\"/profile\"></Route> */}\n            </>\n          ) : (\n            <Redirect to={{pathname: '/login'}} />\n          )}\n        </Switch>\n      </Router>\n    </div>\n  );\n};\nexport default App;\n","/home/kristina/MyProjects/chat-application/src/consts.js",["64"],"/home/kristina/MyProjects/chat-application/src/components/chat/ChatContainer.jsx",["65","66","67"],"import React, {useEffect, useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {ACTIVE_CHAT_ID, ACTIVE_CHAT_STORAGE_KEY, CHAT_IDS, URL} from '../../consts';\nimport useAPI from '../../hooks/ApiHook';\nimport ChatBox from './chat-box/ChatBox';\nimport ChatList from './chat-list/ChatList';\n\nconst ChatContainer = ({user}) => {\n  const [loading, error, data, reload] = useAPI(URL + CHAT_IDS);\n  const [activeChatId, setActiveChatId] = useState(null);\n\n  useEffect(() => {\n    const initialActiveChatId = localStorage.getItem(ACTIVE_CHAT_STORAGE_KEY);\n    if (!initialActiveChatId) {\n      localStorage.setItem(ACTIVE_CHAT_STORAGE_KEY, ACTIVE_CHAT_ID);\n    }\n    setActiveChatId(initialActiveChatId ?? ACTIVE_CHAT_ID);\n  }, []);\n\n  if (!data || loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <div style={{display: 'flex', height: '100%'}}>\n      <ChatList chatList={data} setActiveChatId={setActiveChatId} activeChatId={activeChatId} />\n      <ChatBox userId={user.id} activeChatId={activeChatId} />\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","/home/kristina/MyProjects/chat-application/src/components/chat/chat-list/ChatList.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/ChatBox.jsx",["68","69","70"],"import React, {useEffect, useState} from 'react';\nimport {Button, Form, FormControl} from 'react-bootstrap';\nimport {KEY, POLLING_INTERVAL_SEC, URL} from '../../../consts';\nimport uuid from '../../../utils/uuid';\nimport useAPI from '../../../hooks/ApiHook';\nimport ChatBoxDisplay from './chat-box-display/ChatBoxDisplay';\nimport useEnterSubmit from '../../../hooks/EnterSubmitHook';\n\nconst ChatBox = ({userId, activeChatId}) => {\n  const [loading, error, data, reload, changeUrl] = useAPI(URL + activeChatId);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    changeUrl(URL + activeChatId);\n  }, [activeChatId]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      reload();\n    }, POLLING_INTERVAL_SEC * 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const updateChat = () => {\n    const message = {\n      id: uuid(),\n      userId,\n      text,\n      createdAt: String(new Date()),\n    };\n    const updatedMessages = data.messages.concat(message);\n    const updatedChat = {...data, messages: updatedMessages};\n\n    fetch(URL + activeChatId, {\n      method: 'PUT',\n      headers: {\n        versioning: 'false',\n        'secret-key': KEY,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedChat),\n    });\n\n    reload();\n  };\n\n  useEnterSubmit(updateChat);\n\n  const styleBox = {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(215, 227, 239, 1)',\n    width: '100%',\n  };\n  if (!data || loading) {\n    return <div style={styleBox}>Loading...</div>;\n  }\n  return (\n    <div style={styleBox}>\n      <ChatBoxDisplay activeChat={data} style={{justifyContent: 'center'}} />\n      <Form\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          margin: '10px',\n          marginTop: '0',\n          paddingTop: '8px',\n          borderTop: '2px solid rgba(54, 93, 135, 0.5)',\n        }}\n        onSubmit={event => {\n          event.preventDefault();\n          updateChat();\n          setText('');\n        }}\n      >\n        <FormControl\n          as=\"input\"\n          type=\"text\"\n          onChange={({target: {value}}) => {\n            setText(value);\n          }}\n          value={text}\n        />\n        <Button variant=\"primary\" type=\"submit\" style={{padding: '0', width: '150px'}}>\n          Send\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","/home/kristina/MyProjects/chat-application/src/utils/uuid.js",[],["71","72"],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplay.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/chat/chat-box/chat-box-display/ChatBoxDisplayStyle.jsx",[],"/home/kristina/MyProjects/chat-application/src/components/login/Login.jsx",["73"],"import React, {useEffect, useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport bcrypt from 'bcryptjs';\nimport {users} from './UsersSchema';\nimport {useHistory} from 'react-router-dom';\nimport useEnterSubmit from '../../hooks/EnterSubmitHook';\n\nconst Login = ({user, setUser}) => {\n  const [emailText, setEmailText] = useState('');\n  const [passwordText, setPasswordText] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const history = useHistory();\n  \n  const login = () => {\n    verifyUser();\n    if (user) {\n      history.push('/chat');\n    }\n  };\n\n  useEnterSubmit(login);\n\n  const verifyUser = () => {\n    setPasswordError('');\n    setEmailError('');\n\n    const foundUser = users.find(({email}) => email === emailText);\n    if (!foundUser) {\n      setEmailError('Invalid user');\n    } else {\n      const isAuthenticated = bcrypt.compareSync(passwordText, foundUser.password);\n\n      if (isAuthenticated) {\n        setUser({...user, id: foundUser.id, email: emailText, password: passwordText});\n      } else {\n        setPasswordError('Incorrect password');\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Form\n        style={{\n          border: '2px solid rgba(54, 93, 135, 1)',\n          borderRadius: '5px',\n          padding: '20px',\n          maxWidth: '400px',\n          minWidth: '280px',\n          width: '100%',\n        }}\n        onSubmit={event => {\n          event.preventDefault();\n          login();\n        }}\n      >\n        <Form.Group controlId=\"formBasicEmail\" style={{width: '100%'}}>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            style={{width: '100%'}}\n            isInvalid={emailError}\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={({target: {value}}) => {\n              setEmailText(value);\n            }}\n          />\n          <Form.Text className=\"text-muted\">{emailError}</Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\" style={{width: '100%'}}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            style={{width: '100%'}}\n            isInvalid={passwordError}\n            type=\"password\"\n            placeholder=\"Enter password\"\n            onChange={({target: {value}}) => {\n              setPasswordText(value);\n            }}\n          />\n          <Form.Text className=\"text-muted\">{passwordError}</Form.Text>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" style={{width: '100%'}}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/kristina/MyProjects/chat-application/src/components/login/UsersSchema.js",[],"/home/kristina/MyProjects/chat-application/src/hooks/ApiHook.js",[],"/home/kristina/MyProjects/chat-application/src/hooks/EnterSubmitHook.js",["74"],"import {useEffect} from 'react';\n\nconst useEnterSubmit = callback => {\n  useEffect(() => {\n    const listener = ({code}) => {\n      if (code === 'Enter' || code === 'NumpadEnter') {\n        callback();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => {\n      document.removeEventListener('keydown', listener);\n    };\n  }, []);\n};\n\nexport default useEnterSubmit;\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":5,"column":47,"nodeType":"85","messageId":"86","endLine":5,"endColumn":48},{"ruleId":"79","severity":1,"message":"87","line":2,"column":9,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"88","line":9,"column":19,"nodeType":"81","messageId":"82","endLine":9,"endColumn":24},{"ruleId":"79","severity":1,"message":"89","line":9,"column":32,"nodeType":"81","messageId":"82","endLine":9,"endColumn":38},{"ruleId":"79","severity":1,"message":"88","line":10,"column":19,"nodeType":"81","messageId":"82","endLine":10,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":15,"column":6,"nodeType":"92","endLine":15,"endColumn":20,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":24,"column":6,"nodeType":"92","endLine":24,"endColumn":8,"suggestions":"95"},{"ruleId":"75","replacedBy":"96"},{"ruleId":"77","replacedBy":"97"},{"ruleId":"79","severity":1,"message":"98","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"99","line":14,"column":6,"nodeType":"92","endLine":14,"endColumn":8,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'ChatBoxDisplay' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useHistory' is defined but never used.","'error' is assigned a value but never used.","'reload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeUrl'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["104"],["101"],["102"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [activeChatId, changeUrl]",{"range":"112","text":"113"},"Update the dependencies array to be: [reload]",{"range":"114","text":"115"},"Update the dependencies array to be: [callback]",{"range":"116","text":"117"},[611,625],"[activeChatId, changeUrl]",[805,807],"[reload]",[357,359],"[callback]"]